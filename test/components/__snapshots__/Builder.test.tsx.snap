// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#components/Builder Tests snapshot 1`] = `
<ContextProvider
  value={
    Object {
      "components": Object {
        "Add": [Function],
        "Component": [Function],
        "Group": [Function],
        "GroupHeaderOption": [Function],
        "Remove": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
  background-color: ",
              "#911803",
              ";
",
            ],
          },
          "displayName": "Styled(Component)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
        "form": Object {
          "Input": [Function],
          "Select": [Function],
          "SelectMulti": [Function],
          "Switch": [Function],
        },
      },
      "data": Array [
        Object {
          "children": Array [],
          "id": "s16xtghgjztzb12s",
          "isNegated": false,
          "type": "GROUP",
          "value": "AND",
        },
      ],
      "fields": Array [
        Object {
          "field": "MOCK_FIELD",
          "label": "Mock Field",
          "operators": Array [
            "EQUAL",
            "NOT_EQUAL",
          ],
          "type": "TEXT",
        },
      ],
      "onChange": [Function],
      "setData": [Function],
      "strings": Object {
        "component": Object {
          "delete": "Delete",
        },
        "form": Object {
          "selectYourValue": "Select your value",
        },
        "group": Object {
          "addGroup": "Add Group",
          "addRule": "Add Rule",
          "and": "And",
          "delete": "Delete",
          "not": "Not",
          "or": "Or",
        },
        "operators": Object {
          "ALL_IN": "All in",
          "ANY_IN": "Any in",
          "BETWEEN": "Between",
          "EQUAL": "Equal",
          "LARGER": "Larger",
          "LARGER_EQUAL": "Larger or equal",
          "NOT_BETWEEN": "Not between",
          "NOT_EQUAL": "Not equal",
          "NOT_IN": "Not in",
          "SMALLER": "Smaller",
          "SMALLER_EQUAL": "Smaller or equal",
        },
      },
    }
  }
>
  <styled.div>
    <Component
      filteredData={
        Array [
          Object {
            "children": Array [],
            "id": "s16xtghgjztzb12s",
            "isNegated": false,
            "type": "GROUP",
            "value": "AND",
          },
        ]
      }
      originalData={
        Array [
          Object {
            "children": Array [],
            "id": "s16xtghgjztzb12s",
            "isNegated": false,
            "type": "GROUP",
            "value": "AND",
          },
        ]
      }
    />
  </styled.div>
</ContextProvider>
`;
